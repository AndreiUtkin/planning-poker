{"version":3,"sources":["serviceWorker.js","components/UserSession/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/useFirebaseCollection.js","components/Firebase/useFirebaseDoc.js","components/Firebase/index.js","components/UserSession/useAuthentication.js","constants/routes.js","components/UserSession/useAuthorisation.js","components/UserSession/authRules.js","components/Page/index.jsx","components/Pages/Landing/index.jsx","components/SessionVote/index.jsx","components/SessionResults/index.jsx","components/Pages/Session/index.jsx","components/UI/Toast/index.jsx","components/SessionList/AddSession.jsx","components/SessionList/index.jsx","components/Pages/Home/index.jsx","components/App/index.jsx","index.js"],"names":["Boolean","window","location","hostname","match","AuthUserContext","createContext","FirebaseContext","React","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doSignIn","a","provider","app","auth","GithubAuthProvider","signInWithPopup","doSignOut","signOut","sessions","firestore","collection","session","id","doc","initializeApp","this","useFirebaseCollection","collectionName","firebase","useContext","useState","error","setError","isLoading","setIsLoading","setCollection","useEffect","unsubscribe","onSnapshot","snapshot","list","forEach","push","data","err","useFirebaseDoc","setDoc","getNameFromEmail","email","useAuthentication","user","currentUser","initializing","state","setState","onChange","planningPokerUsername","onAuthStateChanged","HOME","buildSessionUrl","useAuthorisation","condition","history","rules","userIsSignedIn","withRouter","title","children","isNotHome","path","ROUTES","Grommet","full","Box","fill","align","background","pad","direction","justify","Button","onClick","icon","LinkPrevious","color","Heading","handleSignIn","navigateToHome","Landing","authUser","primary","label","bind","estimates","SessionVote","userIsInSession","users","includes","userVote","votes","gap","level","margin","size","Paragraph","Text","weight","map","x","key","disabled","estimate","update","FieldValue","arrayRemove","delete","Unlink","arrayUnion","Link","SessionResults","CheckBox","checked","reveal","e","target","sessionUser","getUserVote","boxBorder","border","width","role","aria-label","Session","params","authRules","pageTitle","flex","Toast","startAutoHideTimeout","timeoutAutoHide","clearTimeout","props","duration","onClose","setTimeout","modal","position","rest","Layer","responsive","plain","Component","AddSession","setTitle","add","createdBy","dateCreated","Date","round","TextInput","autoFocus","placeholder","value","event","basis","SessionList","onNavigateToSession","isAddOpen","setIsAddOpen","Grid","AddCircle","formatDistance","toDate","Home","App","authState","Provider","basename","exact","component","LandingPage","HomePage","SessionPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59426033.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst AuthUserContext = createContext(null);\n\nexport default AuthUserContext;\n","import React from \"react\";\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","import app from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.firestore = app.firestore;\n  }\n\n  doSignIn = async () => {\n    const provider = new app.auth.GithubAuthProvider();\n    await this.auth.signInWithPopup(provider);\n  };\n\n  doSignOut = () => this.auth.signOut();\n\n  sessions = () => this.firestore().collection(\"sessions\");\n\n  session = id => this.sessions().doc(id);\n}\n\nexport default Firebase;\n","import { useEffect, useState, useContext } from \"react\";\n\nimport { FirebaseContext } from \"../Firebase\";\n\nfunction useFirebaseCollection(collectionName) {\n  const firebase = useContext(FirebaseContext);\n\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [collection, setCollection] = useState([]);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .collection(collectionName)\n      .onSnapshot(\n        snapshot => {\n          const list = [];\n          snapshot.forEach(doc => {\n            list.push({ id: doc.id, ...doc.data() });\n          });\n          setIsLoading(false);\n          setCollection(list);\n        },\n        err => {\n          setIsLoading(false);\n          setError(err);\n        }\n      );\n\n    return () => unsubscribe();\n  }, [firebase, collectionName]);\n\n  return { collection, error, isLoading };\n}\n\nexport default useFirebaseCollection;\n","import { useEffect, useState, useContext } from \"react\";\n\nimport { FirebaseContext } from \"../Firebase\";\n\nfunction useFirebaseDoc(id) {\n  const firebase = useContext(FirebaseContext);\n\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [doc, setDoc] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = firebase\n      .firestore()\n      .doc(id)\n      .onSnapshot(\n        doc => {\n          setIsLoading(false);\n          setDoc({ id: doc.id, ...doc.data() });\n        },\n        err => {\n          setIsLoading(false);\n          setError(err);\n        }\n      );\n\n    return () => unsubscribe();\n  }, [firebase, id]);\n\n  return { error, isLoading, doc };\n}\n\nexport default useFirebaseDoc;\n","import FirebaseContext from \"./context\";\nimport Firebase from \"./firebase\";\nimport useFirebaseCollection from \"./useFirebaseCollection\";\nimport useFirebaseDoc from \"./useFirebaseDoc\";\n\nexport default Firebase;\n\nexport { FirebaseContext, useFirebaseCollection, useFirebaseDoc };\n","import { useState, useEffect, useContext } from \"react\";\n\nimport { FirebaseContext } from \"../Firebase\";\n\nconst getNameFromEmail = email => {\n  const reMatch = /^([^@]*)@/;\n  const name = email.match(reMatch)[1];\n  return name;\n};\n\nconst useAuthentication = () => {\n  const firebase = useContext(FirebaseContext);\n\n  const [state, setState] = useState(() => {\n    const user = firebase.auth.currentUser;\n\n    return { initializing: !user, user };\n  });\n\n  function onChange(user) {\n    if (user) {\n      // HACK to build a user name from email address\n      // should really get this from github, but need something working now\n      user.planningPokerUsername = getNameFromEmail(user.email);\n    }\n\n    setState({ initializing: false, user });\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth.onAuthStateChanged(onChange);\n\n    return () => unsubscribe();\n  }, [firebase]);\n\n  return state;\n};\n\nexport default useAuthentication;\n","export const LANDING = \"/\";\nexport const SIGN_IN = \"/signin\";\nexport const HOME = \"/home\";\nexport const SESSION = \"/session/:id\";\nexport const buildSessionUrl = id => `/session/${id}`;\n","import { useEffect, useContext } from \"react\";\n\nimport { FirebaseContext } from \"../Firebase\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst useAuthorisation = (condition, history) => {\n  const firebase = useContext(FirebaseContext);\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth.onAuthStateChanged(user => {\n      if (!condition(user)) {\n        history.push(ROUTES.LANDING);\n      }\n    });\n\n    return () => unsubscribe();\n  }, [firebase, condition]);\n};\n\nexport default useAuthorisation;\n","const rules = {\n  userIsSignedIn: user => !!user\n};\n\nexport default rules;\n","import React from \"react\";\nimport { Grommet, Box, Heading, Button } from \"grommet\";\nimport { LinkPrevious } from \"grommet-icons\";\nimport { withRouter } from \"react-router-dom\";\n\nimport * as ROUTES from \"../../constants/routes\";\n\nconst Page = ({ title, match, history, children }) => {\n  const isNotHome = match.path !== ROUTES.HOME && match.path !== ROUTES.LANDING;\n\n  return (\n    <Grommet full>\n      <Box fill align=\"start\" background=\"light-4\" pad=\"small\">\n        <Box direction=\"row\">\n          {isNotHome && (\n            <Box justify=\"center\" pad=\"small\">\n              <Button\n                onClick={() => history.push(ROUTES.HOME)}\n                icon={<LinkPrevious color=\"accent-2\" />}\n              />\n            </Box>\n          )}\n          <Heading>{title}</Heading>\n        </Box>\n        {children}\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default withRouter(Page);\n","import React, { useContext } from \"react\";\nimport { Heading, Button } from \"grommet\";\n\nimport Page from \"../../Page\";\nimport { AuthUserContext } from \"../../UserSession\";\nimport { FirebaseContext } from \"../../Firebase\";\nimport * as ROUTES from \"../../../constants/routes\";\n\nconst handleSignIn = async (firebase, history) => {\n  await firebase.doSignIn();\n  history.push(ROUTES.HOME);\n};\n\nconst navigateToHome = history => {\n  history.push(ROUTES.HOME);\n};\n\nconst Landing = ({ history }) => {\n  const authUser = useContext(AuthUserContext);\n  const firebase = useContext(FirebaseContext);\n\n  return (\n    <Page>\n      <Heading>\n        Welcome to planning poker{\" \"}\n        {authUser ? authUser.planningPokerUsername : \"\"}\n      </Heading>\n      {authUser && (\n        <Button\n          primary\n          label=\"Start\"\n          onClick={navigateToHome.bind(this, history)}\n        />\n      )}\n      {!authUser && (\n        <Button\n          primary\n          label=\"Sign in\"\n          onClick={handleSignIn.bind(this, firebase, history)}\n        />\n      )}\n    </Page>\n  );\n};\n\nexport default Landing;\n","import React, { useContext } from \"react\";\nimport { Box, Button, Heading, Paragraph, Text } from \"grommet\";\nimport { Link, Unlink } from \"grommet-icons\";\n\nimport { FirebaseContext } from \"../Firebase\";\nimport { AuthUserContext } from \"../UserSession\";\n\nconst estimates = [1, 2, 5, 8, 13];\n\nfunction SessionVote({ session }) {\n  const firebase = useContext(FirebaseContext);\n  const user = useContext(AuthUserContext);\n\n  const joinSession = () => {\n    firebase.session(session.id).update({\n      users: firebase.firestore.FieldValue.arrayUnion(\n        user.planningPokerUsername\n      )\n    });\n  };\n\n  const leaveSession = () => {\n    firebase.session(session.id).update({\n      users: firebase.firestore.FieldValue.arrayRemove(\n        user.planningPokerUsername\n      ),\n      [`votes.${user.planningPokerUsername}`]: firebase.firestore.FieldValue.delete()\n    });\n  };\n\n  const castVote = estimate => {\n    firebase.session(session.id).update({\n      [`votes.${user.planningPokerUsername}`]: estimate\n    });\n  };\n\n  const userIsInSession =\n    session.users && session.users.includes(user.planningPokerUsername);\n\n  const userVote = session.votes && session.votes[user.planningPokerUsername];\n\n  return (\n    <Box align=\"start\" gap=\"small\" background=\"neutral-3\" pad=\"small\">\n      <Heading level=\"2\" margin=\"none\" size=\"small\">\n        Your vote\n      </Heading>\n      {userIsInSession && !userVote && (\n        <Paragraph>\n          You have not voted on this issue yet. Please do so by clicking one of\n          the estimates below\n        </Paragraph>\n      )}\n      {userIsInSession && userVote && (\n        <>\n          <Box align=\"center\">\n            <Text color=\"accent-1\" size=\"80px\" weight=\"bold\">\n              {userVote}\n            </Text>\n          </Box>\n          <Paragraph>\n            You may change your vote by clicking another estimate below\n          </Paragraph>\n        </>\n      )}\n      {userIsInSession && (\n        <Box gap=\"xxsmall\" direction=\"row\">\n          {estimates.map(x => (\n            <Button\n              key={`estimate_${x}`}\n              label={x}\n              disabled={userVote === x}\n              onClick={() => castVote(x)}\n            />\n          ))}\n        </Box>\n      )}\n      {userIsInSession ? (\n        <>\n          <Paragraph size=\"small\">\n            To remove your vote and leave the session click below\n          </Paragraph>\n          <Button\n            // primary\n            color=\"accent-3\"\n            label=\"Leave\"\n            onClick={leaveSession}\n            icon={<Unlink />}\n          />\n        </>\n      ) : (\n        <>\n          <Paragraph>\n            You need to join the session before you may cast a vote. Join by\n            clicking below\n          </Paragraph>\n          <Button primary label=\"Join\" onClick={joinSession} icon={<Link />} />\n        </>\n      )}\n    </Box>\n  );\n}\n\nexport default SessionVote;\n","import React, { useContext } from \"react\";\nimport { Box, Heading, Text, CheckBox, Paragraph } from \"grommet\";\n\nimport { FirebaseContext } from \"../Firebase\";\nimport { AuthUserContext } from \"../UserSession\";\n\nfunction SessionResults({ session }) {\n  const firebase = useContext(FirebaseContext);\n  const user = useContext(AuthUserContext);\n\n  const handleRevealChange = e => {\n    const reveal = e.target.checked;\n    // controlled component hooked up to firebase 🤫\n    firebase.session(session.id).update({ reveal });\n  };\n\n  const getUserVote = user => session.votes && session.votes[user];\n\n  return (\n    <Box align=\"start\" gap=\"small\" background=\"neutral-4\" pad=\"small\">\n      <Heading level=\"2\" margin=\"none\" size=\"small\">\n        Results\n      </Heading>\n      <Paragraph>Voting results will appear below for each user</Paragraph>\n      <CheckBox\n        checked={session.reveal}\n        label=\"Reveal results\"\n        onChange={handleRevealChange}\n      />\n      <Box direction=\"row\" justify=\"center\" gap=\"small\">\n        {session.users &&\n          session.users.map(sessionUser => {\n            const userVote = getUserVote(sessionUser);\n            const boxBorder =\n              sessionUser === user.planningPokerUsername\n                ? { color: \"accent-3\", size: \"xsmall\" }\n                : { size: \"xsmall\" };\n            return (\n              <Box\n                key={`session_user_${sessionUser}`}\n                direction=\"row\"\n                border={boxBorder}\n              >\n                <Box pad=\"xsmall\">\n                  <Text size=\"large\">{sessionUser}</Text>\n                </Box>\n                {userVote && (\n                  <Box\n                    pad=\"xxsmall\"\n                    justify=\"center\"\n                    width=\"xxsmall\"\n                    align=\"center\"\n                  >\n                    {session.reveal ? (\n                      <Text size=\"large\" weight=\"bold\">\n                        {userVote}\n                      </Text>\n                    ) : (\n                      <Text size=\"large\">\n                        <span role=\"img\" aria-label=\"waiting\">\n                          🤐\n                        </span>\n                      </Text>\n                    )}\n                  </Box>\n                )}\n              </Box>\n            );\n          })}\n      </Box>\n    </Box>\n  );\n}\n\nexport default SessionResults;\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nimport Page from \"../../Page\";\nimport { useAuthorisation, authRules } from \"../../UserSession\";\nimport { useFirebaseDoc } from \"../../Firebase\";\nimport SessionVote from \"../../SessionVote\";\nimport SessionResults from \"../../SessionResults\";\n\nconst Session = ({ history, match }) => {\n  const { id } = match.params;\n\n  useAuthorisation(authRules.userIsSignedIn, history);\n  const { doc: session, isLoading, error } = useFirebaseDoc(`sessions/${id}`);\n\n  const pageTitle = session\n    ? session.title\n    : isLoading\n    ? \"Loading...\"\n    : error\n    ? \"Error\"\n    : \"\";\n\n  return (\n    <Page title={pageTitle}>\n      {session && (\n        <Box fill=\"horizontal\" direction=\"row\" gap=\"small\">\n          <Box width=\"medium\">\n            <SessionVote session={session} />\n          </Box>\n          <Box flex=\"grow\">\n            <SessionResults session={session} />\n          </Box>\n        </Box>\n      )}\n    </Page>\n  );\n};\n\nexport default Session;\n","import React, { Component } from \"react\";\nimport { Layer } from \"grommet\";\n\nexport class Toast extends Component {\n  componentDidMount() {\n    this.startAutoHideTimeout();\n  }\n\n  componentWillUnmount() {\n    const { timeoutAutoHide } = this;\n    if (timeoutAutoHide) {\n      clearTimeout(this.timeoutAutoHide);\n    }\n  }\n\n  startAutoHideTimeout() {\n    const { duration, onClose } = this.props;\n    if (duration) {\n      this.timeoutAutoHide = setTimeout(() => {\n        onClose();\n      }, duration * 1000);\n    }\n  }\n\n  render() {\n    const { children, modal, position, full, ...rest } = this.props;\n    return (\n      <Layer\n        position={position || \"top\"}\n        full={full}\n        modal={modal}\n        margin=\"none\"\n        responsive\n        plain={modal ? false : true}\n        {...rest}\n      >\n        {children}\n      </Layer>\n    );\n  }\n}\n","import React, { useState, useContext } from \"react\";\nimport { Box, Heading, Button, TextInput } from \"grommet\";\n\nimport { Toast } from \"../UI/Toast\";\nimport { FirebaseContext } from \"../Firebase\";\nimport { AuthUserContext } from \"../UserSession\";\n\nconst AddSession = ({ onClose }) => {\n  const [title, setTitle] = useState(\"\");\n  const firebase = useContext(FirebaseContext);\n  const user = useContext(AuthUserContext);\n\n  async function saveNewSession() {\n    await firebase.sessions().add({\n      title,\n      createdBy: user.planningPokerUsername,\n      dateCreated: new Date()\n    });\n    onClose();\n  }\n\n  return (\n    <Toast position=\"center\" modal>\n      <Box align=\"center\">\n        <Box width=\"medium\" pad=\"small\" round={false}>\n          {/* <Image\n          src=\"https://uploads.codesandbox.io/uploads/user/5dfd08c4-cbb6-4165-a264-f2eb4b2f6ef1/-wkS-gremlin.png\"\n          fit=\"cover\"\n        /> */}\n          <Heading level=\"4\" margin=\"small\">\n            Please enter a title\n          </Heading>\n          <TextInput\n            autoFocus\n            placeholder=\"type here\"\n            value={title}\n            onChange={event => setTitle(event.target.value)}\n          />\n        </Box>\n        <Box width=\"medium\" margin=\"none\" direction=\"row\">\n          <Box basis=\"1/2\">\n            <Button plain color=\"dark-1\" onClick={saveNewSession}>\n              <Box pad=\"small\" align=\"center\" background=\"status-ok\">\n                Ok\n              </Box>\n            </Button>\n          </Box>\n          <Box basis=\"1/2\">\n            <Button plain color=\"dark-1\" onClick={onClose}>\n              <Box pad=\"small\" align=\"center\" background=\"status-error\">\n                Cancel\n              </Box>\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Toast>\n  );\n};\n\nexport default AddSession;\n","import React, { useState } from \"react\";\nimport { Grid, Box, Text, Heading, Button } from \"grommet\";\nimport { AddCircle } from \"grommet-icons\";\nimport { formatDistance } from \"date-fns\";\n\nimport AddSession from \"./AddSession\";\nimport { useFirebaseCollection } from \"../Firebase\";\n\nconst SessionList = ({ onNavigateToSession }) => {\n  const [isAddOpen, setIsAddOpen] = useState(false);\n\n  const { collection: sessions, error, isLoading } = useFirebaseCollection(\n    \"sessions\"\n  );\n\n  if (isLoading) {\n    return <Heading level=\"4\">Loading...</Heading>;\n  } else if (error) {\n    return <Heading level=\"4\">Error loading sessions</Heading>;\n  }\n\n  return (\n    <Grid align=\"start\" gap=\"small\">\n      <Box align=\"start\">\n        <Button\n          icon={<AddCircle />}\n          label=\"Create New Session\"\n          onClick={() => setIsAddOpen(true)}\n          color=\"accent-4\"\n          primary\n        />\n      </Box>\n      <Box gap=\"small\" direction=\"row-responsive\">\n        {sessions.map(session => (\n          <Box\n            key={`sessionlist_${session.id}`}\n            background=\"neutral-2\"\n            pad=\"small\"\n            onClick={() => onNavigateToSession(session.id)}\n          >\n            <Heading level=\"3\" margin=\"none\">\n              {session.title}\n            </Heading>\n            <Text size=\"xsmall\">\n              Created by {session.createdBy}{\" \"}\n              {session.dateCreated &&\n                `${formatDistance(\n                  session.dateCreated.toDate(),\n                  new Date()\n                )} ago`}\n            </Text>\n          </Box>\n        ))}\n      </Box>\n      {isAddOpen && <AddSession onClose={() => setIsAddOpen(false)} />}\n    </Grid>\n  );\n};\n\nexport default SessionList;\n","import React from \"react\";\n\nimport { useAuthorisation, authRules } from \"../../UserSession\";\nimport SessionList from \"../../SessionList\";\nimport Page from \"../../Page\";\nimport * as ROUTES from \"../../../constants/routes\";\n\nconst Home = ({ history }) => {\n  useAuthorisation(authRules.userIsSignedIn, history);\n\n  function navigateToSession(id) {\n    history.push(ROUTES.buildSessionUrl(id));\n  }\n\n  return (\n    <Page title=\"All Sessions\">\n      <SessionList onNavigateToSession={navigateToSession} />\n    </Page>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { AuthUserContext, useAuthentication } from \"../UserSession\";\nimport LandingPage from \"../Pages/Landing\";\nimport SessionPage from \"../Pages/Session\";\nimport HomePage from \"../Pages/Home\";\nimport * as ROUTES from \"../../constants/routes\";\n\nconst App = () => {\n  const authState = useAuthentication();\n\n  return (\n    <AuthUserContext.Provider value={authState.user}>\n      <Router basename=\"/\">\n        <Route exact path={ROUTES.LANDING} component={LandingPage} />\n        <Route path={ROUTES.HOME} component={HomePage} />\n        <Route path={ROUTES.SESSION} component={SessionPage} />\n      </Router>\n    </AuthUserContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./components/App\";\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}